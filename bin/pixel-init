#! /bin/bash

echo -e "INIT\t: apt-get update..."
sudo apt-get update
echo -e "INIT\t: apt-get upgrade..."
sudo apt-get upgrade -y

function installApt() {
  APP=$1
  INST=$2
  if [ "$INST" == "" ]; then INST=$APP; fi
  type $APP >& /dev/null
  RC=$?; if [ "$RC" == "0" ]; then
      echo -e "INIT\t:" `type $APP` "(OK)"
  else
      echo -e "INIT\t: installing $APP (sudo)"
      sudo apt-get install -y $INST
  fi
}

function installNpm() {
  APP=$1
  INST=$2
  if [ "$INST" == "" ]; then INST=$APP; fi
  type $APP >& /dev/null
  RC=$?; if [ "$RC" == "0" ]; then
      echo -e "INIT\t:" `type $APP` "(OK)"
  else
      echo -e "INIT\t: installing $APP (sudo)"
      npm install -y -g $INST
  fi
}

function installLibDev() {
  LIB=$1
  MSG=`sudo ldconfig -p | grep $LIB.so`;
  RC=$?; if [ "$RC" == "0" ]; then
    echo -e "INIT\t: $MSG (OK)"
  else
    echo -e "INIT\t: installing $LIB-dev"
  fi
}

echo -e "INIT\t: linking home folder..."
cd ~
#ln -sf /home/pixel/pixel/bin /home/pixel/bin
ln -sf ~/pixel/vimrc .vimrc
ln -sf ~/pixel/tmux.conf .tmux.conf
ln -sf ~/pixel/indent.pro .indent.pro
ln -sf ~/pixel/astyle.rc .astylerc

echo -e "INIT\t: installing libcap2-bin"
sudo apt-get install -y libcap2-bin

installApt curl

MSG=`docker --version` >& /dev/null
RC=$?; if [ "$RC" == "0" ]; then
  echo -e "INIT\t: $MSG (OK)"
else
  echo -e "INIT\t: installing docker engine"
  sudo apt-get install -y ca-certificates gnupg lsb-release
  sudo mkdir -p /etc/apt/keyrings
  if [ ! -e /etc/apt/keyrings/docker.gpg ]; then
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  fi
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
         $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  sudo apt-get update
  sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-compose-plugin
  sudo groupadd docker
  sudo usermod -aG docker $USER
  #newgrp docker
fi

installApt git
installApt vim

# Common stuff
installApt mkpasswd whois
#installApt cross-env
#installApt concurrently
installApt nslookup dnsutils
installApt tmux
#installApt sqlite3
#installApt mocha
#installApt nuxt
#installApt fzf

#installNpm bit bit-bin
#installNpm vue @vue/cli

echo -e "INIT\t: setting up git global configuration"
git config --global user.email "karl@firepick.org"
git config --global user.name "Karl Lew"
git config --global push.default simple

#installApt opusenc opus-tools
#installApt ogginfo vorbis-tools
#installApt aplay alsa-utils
#installApt lzma

#type rg >& /dev/null
#RC=$?; if [ "$RC" == "0" ]; then
    #echo -e "BUILD\t: ripgrep installed"
#else
    #curl -LO https://github.com/BurntSushi/ripgrep/releases/download/12.1.1/ripgrep_12.1.1_amd64.deb
    #sudo dpkg -i ripgrep_12.1.1_amd64.deb
#fi

if [ -e .bashrc ]; then
    cmp .bashrc pixel/.bashrc
    RC=$?; if [ "$RC" != "0" ]; then
        mv -f .bashrc .bashrc.old
    fi
fi
ln -sf ~/pixel/.bashrc .bashrc
echo -e "INIT\t: exit and re-enter chroot to verify setup"


echo -e "INIT\t: pixel initialized"
